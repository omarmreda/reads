{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laptop\\\\Desktop\\\\myreads\\\\myReads-app\\\\starter\\\\src\\\\Components\\\\Library.js\";\nimport React from \"react\";\nimport Shelf from \"./Shelf\";\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Library({\n  booksApi,\n  handleShelf\n}) {\n  // filtering the books through the shelves with its shelf value.\n  const currentlyReading = booksApi.filter(book => book.shelf === \"currentlyReading\");\n  const wantToRead = booksApi.filter(book => book.shelf === \"wantToRead\");\n  const read = booksApi.filter(book => book.shelf === \"read\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-books-content\",\n    children: [/*#__PURE__*/_jsxDEV(Shelf, {\n      books: currentlyReading,\n      title: \"Currently Reading\",\n      handleShelf: handleShelf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Shelf, {\n      books: wantToRead,\n      title: \"Want to Read\",\n      handleShelf: handleShelf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Shelf, {\n      books: read,\n      title: \"Read\",\n      handleShelf: handleShelf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Library;\nLibrary.propTypes = {\n  booksApi: propTypes.array.isRequired,\n  handleShelf: propTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"sources":["C:/Users/Laptop/Desktop/myreads/myReads-app/starter/src/Components/Library.js"],"names":["React","Shelf","propTypes","Library","booksApi","handleShelf","currentlyReading","filter","book","shelf","wantToRead","read","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAjB,EAA4C;AACzD;AACA,QAAMC,gBAAgB,GACpBF,QAAQ,CAACG,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,kBAAzC,CADF;AAEA,QAAMC,UAAU,GAAEN,QAAQ,CAACG,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,YAAzC,CAAlB;AACA,QAAME,IAAI,GAAGP,QAAQ,CAACG,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,MAAzC,CAAb;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEH,gBADT;AAEE,MAAA,KAAK,EAAC,mBAFR;AAGE,MAAA,WAAW,EAAED;AAHf;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,KAAD;AACE,MAAA,KAAK,EAAEK,UADT;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,WAAW,EAAEL;AAHf;AAAA;AAAA;AAAA;AAAA,YANF,eAWE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEM,IAAd;AAAoB,MAAA,KAAK,EAAC,MAA1B;AAAiC,MAAA,WAAW,EAAEN;AAA9C;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;KArBuBF,O;AAuBxBA,OAAO,CAACD,SAAR,GAAmB;AACjBE,EAAAA,QAAQ,EAAGF,SAAS,CAACU,KAAV,CAAgBC,UADV;AAEjBR,EAAAA,WAAW,EAAGH,SAAS,CAACY,IAAV,CAAeD;AAFZ,CAAnB","sourcesContent":["import React from \"react\";\r\nimport Shelf from \"./Shelf\";\r\nimport propTypes from 'prop-types'\r\nexport default function Library({ booksApi, handleShelf }) {\r\n  // filtering the books through the shelves with its shelf value.\r\n  const currentlyReading =\r\n    booksApi.filter((book) => book.shelf === \"currentlyReading\") \r\n  const wantToRead =booksApi.filter((book) => book.shelf === \"wantToRead\") \r\n  const read = booksApi.filter((book) => book.shelf === \"read\"); \r\n  return (\r\n    <div className=\"list-books-content\">\r\n      <Shelf\r\n        books={currentlyReading}\r\n        title=\"Currently Reading\"\r\n        handleShelf={handleShelf}\r\n      />\r\n      <Shelf\r\n        books={wantToRead}\r\n        title=\"Want to Read\"\r\n        handleShelf={handleShelf}\r\n      />\r\n      <Shelf books={read} title=\"Read\" handleShelf={handleShelf} />\r\n    </div>\r\n  );\r\n}\r\n\r\nLibrary.propTypes ={\r\n  booksApi : propTypes.array.isRequired ,\r\n  handleShelf : propTypes.func.isRequired ,\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}